name: merge branch

on:
  workflow_call:
    inputs:
      repo:
        type: string
        required: true
      branch_name:
        type: string
        required: true
        default: "main"
      project_name:
        type: string
        required: true
      artifact_name:
        type: string
        required: true
      next_version:
        type: string
        required: false
    secrets:
      gh_token:
        required: true
      gh_user:
        required: true
      gh_email:
        required: true

env:
    GH_TOKEN: ${{ secrets.gh_token }}
    OUTPUT_DIR: "artifact"
    NEXT_VERSION: "${{ inputs.next_version }}"
    PROJECT_NAME: "${{ inputs.project_name }}"
    ARTIFACT_NAME: "${{ inputs.artifact_name }}"

jobs:
 build-from-branch:
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout ${{ inputs.branch_name }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch_name }}
          fetch-depth: 0
          submodules: true

      - name: Update package.py version to ${{ env.NEXT_VERSION }}
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ env.NEXT_VERSION }}\"/" package.py
          sed -i "s/^name = \".*\"/name = \"${{ env.PROJECT_NAME }}\"/" package.py

      - name: Create package artifacts
        id: create-artifact
        run: |
          python create_package.py --output ${{ env.OUTPUT_DIR }}
          echo "file_name=${{ env.PROJECT_NAME }}-${{ env.NEXT_VERSION }}.zip" >> $GITHUB_OUTPUT

      - name: üîë Set Bot Authentication
        run: |
          git config --global user.name "${{ secrets.gh_user }}"
          git config --global user.email "${{ secrets.gh_email }}"

      - name: Add changed files from ${{ vars.MAIN_BRANCH }}
        run: |
          git add . -- ':!${{ env.OUTPUT_DIR }}/${{ steps.create-artifact.outputs.file_name }}'
          if git diff --cached --exit-code > /dev/null; then
            echo "No changes to commit"
          else
            git commit -m "[Automated] Add generated package files from ${{ vars.MAIN_BRANCH }}"
          fi

          git tag -a ${{ env.NEXT_VERSION }} -m "[Automated] Release version ${{ env.NEXT_VERSION }}"

      - name: üîè Push to protected ${{ vars.MAIN_BRANCH }} branch
        uses: CasperWA/push-protected@v2.16.0
        with:
          token: ${{ env.GH_TOKEN }}
          branch: ${{ vars.MAIN_BRANCH }}
          tags: false
          unprotect_reviews: false

      - name: üîº Upload package zip artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ${{ env.OUTPUT_DIR }}/${{ steps.create-artifact.outputs.file_name }}
