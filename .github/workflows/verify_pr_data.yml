name: Validate pr information

on:
  workflow_call:
    inputs:
      repo:
        type: string
        required: false
      base_branch:
        type: string
        required: true
      latest_release:
        type: string
        required: true
      changelog_order:
        type: string
        required: true

    secrets:
      gh_token:
        required: true

    outputs:
      label-list:
        description: List of unique labels
        value: ${{ jobs.validate-pr-information.outputs.label-list }}
      bump-increment:
        description: Calcualted bump increment based on pr labels
        value: ${{ jobs.validate-pr-information.outputs.bump-increment }}
      changelog:
        description: Markdown formatted changelog
        value: ${{ jobs.validate-pr-information.outputs.changelog }}

env:
  GH_REPO: ${{ inputs.repo || github.repository }}
  BASE_BRANCH: ${{ inputs.base_branch }}
  GH_TOKEN: ${{ secrets.gh_token || false }}
  RELEASE_DATE: ${{inputs.latest_release }}

jobs:
  validate-pr-information:
    runs-on: ubuntu-latest

    outputs:
      label-list: "${{ steps.pr-query.outputs.label-list }}"
      bump-increment: "${{ steps.pr-query.outputs.bump-increment }}"
      changelog: "${{ steps.pr-query.outputs.changelog-markdown }}"

    steps:
      - name: Query PR data
        id: pr-query
        uses: ynput/github-query@main
        with:
          repo: "${{ env.GH_REPO }}"
          base_branch: "${{ env.BASE_BRANCH }}"
          date: "${{ env.RELEASE_DATE }}"
          query_parameters: "body,labels,title,id,number,url"
          changelog_labels: "${{ inputs.changelog_order }}"

      - name: Show debug output
        env:
          CHANGELOG_RESULT: ${{ steps.pr-query.outputs.changelog-markdown }}
        run: |
          echo "label-list: ${{ steps.pr-query.outputs.label-list }}"
          echo "bump-increment: ${{ steps.pr-query.outputs.bump-increment }}"
          echo "changelog: $CHANGELOG_RESULT"

      - name: Check for existing PRs
        if: ${{ !fromJson(steps.pr-query.outputs.raw-output) }}
        run: |
          echo "pr_list: ${{ steps.pr-query.outputs.raw-output }}"
          echo "::error::No merged PRs found since last release."
          exit 1
  
      - name: Check for existing PR labels
        if: ${{ !steps.pr-query.outputs.label-list }}
        # TODO enhance output to show wich PR
        run: |
          echo "::error:: No PR labels found. Can't create a new release."
          exit 1
  
      - name: ‚ùó Validate labels
        if: ${{ !steps.pr-query.outputs.bump-increment }}
        run: |
          # TODO Format using line breaks - not supported by annotations
          echo "::error:: No valid versioning labels found in PRs. Only found these labels: ${{ steps.pr-query.outputs.label-list }}. Are you sure you want to create a new release?"
          exit 1
